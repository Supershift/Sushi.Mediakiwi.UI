@import '_mixins.scss';

div.error {
    border: 2px solid #e74c3c !important;
}

.notifications {

    .error,
    .note {
        padding: $gutter2 $gutter;
    }

    .error {
        background: $errorBackground;
        color: $errorColor;
    }

    .note {
        background: $noteBackground;
        color: $noteColor;
    }
}

.formTable {
    margin-top: $gutter2;
    padding: 0 $gutter;

    tbody {
        tr {
            @include prefix(align-items, flex-start, true);

            th {
                padding-top: 3px!important;
                color: $formLabelColor;

                label {
                    color: inherit;

                    &.mandatory {
                        &:after {
                            content: '*';
                        }
                    }
                }

                h1, h2, h3, h4, h5, h6 {
                    color: $formTitleColor;
                }
            }

            td {
                label {
                    color: $formLabelColor;
                }

                a[class^='button-'], [class*=' button-'] {
                    &.right {
                        margin-left: 5px;
                    }

                    &:not(.right) {
                        margin-right: 5px;
                    }
                }
            }
        }


        h3 {
            margin-bottom: 0;
        }
    }
}

.selections {
    margin-top: $gutter;
    overflow-x: auto;
    clear: both;

    table {
        text-align: left;
        border-collapse: collapse;
        width: 100%;

        thead {
            th {
                background: $listHeaderBackground;
                color: $listHeaderColor !important;
                padding: 5px $gutter;
                font-weight: 700 !important;
                border-top: solid 1px #e3e5e6 !important;
                border-bottom: solid 1px #e3e5e6 !important;
                white-space: nowrap;
            }
        }

        tbody {
            tr {
                background: $listItemBackground;
                border-bottom: $listItemBorder !important;
                color: $listItemColor;
                vertical-align: top;
                cursor: pointer;

                &:hover {
                    background: $listItemBackgroundHover !important;
                }

                td {
                    padding: 5px $gutter;
                    white-space: nowrap;
                }
            }
        }
    }
}

@media (min-width: $mobileBreakpoint) {
    .formTable {
        tbody {
            tr {
                th {
                    // fixed width and ellipsis
                    &:not(:only-child) {
                        width: 135px;
                        max-width: 135px;
                        white-space: nowrap;
                        overflow: hidden;
                        text-overflow: ellipsis;
                    }

                    &:not(:first-child):not(only-child) {
                        padding-left: 16px;
                    }
                }

                td {
                    flex: 1;
                    padding: 0;
                }
            }
        }
    }
}

@media (min-width: $tabletBreakpoint) {
    .selections {
        overflow-x: hidden;

        thead {
            th {
                white-space: initial;
            }
        }

        tbody {
            tr {
                td {
                    white-space: initial;
                }
            }
        }
    }
}
